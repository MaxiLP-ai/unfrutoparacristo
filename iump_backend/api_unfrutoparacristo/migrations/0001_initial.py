# Generated by Django 5.1.2 on 2025-07-04 20:46

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('usuario_rut', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='RUT')),
                ('usuario_nombre_completo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre Completo')),
                ('usuario_email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Correo Electrónico')),
                ('usuario_rol', models.CharField(choices=[('alumno', 'Alumno(a)'), ('profesor', 'Profesor(a)'), ('profesor_jefe', 'Profesor(a) Jefe(a)'), ('profesor_asistente', 'Profesor(a) Asistente'), ('superadmin', 'Super Administrador(a)')], default='alumno', max_length=50, verbose_name='Rol')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group', verbose_name='Grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission', verbose_name='Permisos de Usuario')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Actividad',
            fields=[
                ('actividad_id', models.AutoField(primary_key=True, serialize=False)),
                ('actividad_descripcion', models.TextField(verbose_name='Descripción de la Actividad')),
            ],
            options={
                'verbose_name': 'Actividad',
                'verbose_name_plural': 'Actividades',
            },
        ),
        migrations.CreateModel(
            name='Asistencia',
            fields=[
                ('asistencia_id', models.AutoField(primary_key=True, serialize=False)),
                ('asistencia_fecha', models.DateField(verbose_name='Fecha de la Asistencia')),
            ],
            options={
                'verbose_name': 'Asistencia',
                'verbose_name_plural': 'Asistencias',
                'ordering': ['-asistencia_fecha'],
            },
        ),
        migrations.CreateModel(
            name='Desafio',
            fields=[
                ('desafio_id', models.AutoField(primary_key=True, serialize=False)),
                ('desafio_descripcion', models.TextField(verbose_name='Descripción del Desafío')),
                ('desafio_asignacionAutomatica', models.BooleanField(default=False, verbose_name='Asignación Automática')),
            ],
            options={
                'verbose_name': 'Desafío',
                'verbose_name_plural': 'Desafíos',
            },
        ),
        migrations.CreateModel(
            name='Fruto',
            fields=[
                ('fruto_id', models.AutoField(primary_key=True, serialize=False)),
                ('fruto_nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre del Fruto')),
                ('fruto_color', models.CharField(blank=True, max_length=50, null=True, verbose_name='Color del Fruto')),
                ('fruto_modelo_3d_path', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ruta del Modelo 3D (.glb)')),
                ('fruto_descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción del Fruto')),
            ],
            options={
                'verbose_name': 'Fruto',
                'verbose_name_plural': 'Frutos',
            },
        ),
        migrations.CreateModel(
            name='Mascota',
            fields=[
                ('mascota_id', models.AutoField(primary_key=True, serialize=False)),
                ('mascota_nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre de la Mascota')),
                ('mascota_logo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ruta del Logo')),
                ('mascota_modelo_3d_path', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ruta del Modelo 3D (.glb)')),
                ('mascota_descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción Opcional')),
            ],
            options={
                'verbose_name': 'Mascota',
                'verbose_name_plural': 'Mascotas',
            },
        ),
        migrations.CreateModel(
            name='Regla',
            fields=[
                ('regla_id', models.AutoField(primary_key=True, serialize=False)),
                ('regla_descripcion', models.TextField(verbose_name='Descripción de la Regla')),
                ('regla_aplicable_a', models.CharField(choices=[('desafio', 'Desafío'), ('asistencia', 'Asistencia'), ('general', 'General')], max_length=50, verbose_name='Aplicable a')),
                ('regla_configuracion', models.JSONField(blank=True, null=True, verbose_name='Configuración de la Regla (JSON)')),
            ],
            options={
                'verbose_name': 'Regla',
                'verbose_name_plural': 'Reglas',
            },
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('servicio_id', models.AutoField(primary_key=True, serialize=False)),
                ('servicio_descripcion', models.TextField(verbose_name='Descripción del Servicio')),
                ('servicio_fecha_hora', models.DateTimeField(verbose_name='Fecha y Hora del Servicio')),
                ('servicio_tipo_servicio', models.CharField(choices=[('clase', 'Clase'), ('evento', 'Evento'), ('reunion', 'Reunión')], max_length=50, verbose_name='Tipo de Servicio')),
            ],
            options={
                'verbose_name': 'Servicio',
                'verbose_name_plural': 'Servicios',
                'ordering': ['-servicio_fecha_hora'],
            },
        ),
        migrations.CreateModel(
            name='Profesor',
            fields=[
                ('profesor_usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='perfil_profesor', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('profesor_clases_dirigidas', models.IntegerField(default=0, verbose_name='Número de Clases Dirigidas')),
                ('profesor_fecha_proxima_clase', models.DateField(blank=True, null=True, verbose_name='Fecha de Próxima Clase')),
            ],
            options={
                'verbose_name': 'Profesor',
                'verbose_name_plural': 'Profesores',
            },
        ),
        migrations.CreateModel(
            name='AsistenciaDetalle',
            fields=[
                ('asistenciadetalle_id', models.AutoField(primary_key=True, serialize=False)),
                ('asistenciadetalle_rutAsistentes', models.TextField(verbose_name='RUTs de Asistentes (separados por coma)')),
                ('asistenciadetalle_asistencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles_asistencia', to='api_unfrutoparacristo.asistencia', verbose_name='Asistencia')),
            ],
            options={
                'verbose_name': 'Detalle de Asistencia',
                'verbose_name_plural': 'Detalles de Asistencia',
            },
        ),
        migrations.CreateModel(
            name='Cesta',
            fields=[
                ('cesta_id', models.AutoField(primary_key=True, serialize=False)),
                ('cesta_usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cesta', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Cesta',
                'verbose_name_plural': 'Cestas',
            },
        ),
        migrations.CreateModel(
            name='Clase',
            fields=[
                ('clase_id', models.AutoField(primary_key=True, serialize=False)),
                ('clase_nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre de la Clase')),
                ('clase_edad_referencia_min', models.IntegerField(blank=True, null=True, verbose_name='Edad Mínima de Referencia')),
                ('clase_edad_referencia_max', models.IntegerField(blank=True, null=True, verbose_name='Edad Máxima de Referencia')),
                ('clase_descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción de la Clase')),
                ('clase_profesor_jefe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clases_como_jefe', to=settings.AUTH_USER_MODEL, verbose_name='Profesor(a) Jefe(a)')),
                ('clase_mascota', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clases_asociadas', to='api_unfrutoparacristo.mascota', verbose_name='Mascota Asociada')),
            ],
            options={
                'verbose_name': 'Clase',
                'verbose_name_plural': 'Clases',
            },
        ),
        migrations.AddField(
            model_name='asistencia',
            name='asistencia_tipo_clase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='api_unfrutoparacristo.clase', verbose_name='Tipo de Clase'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='usuario_clase_actual',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alumnos_actuales', to='api_unfrutoparacristo.clase', verbose_name='Clase Actual'),
        ),
        migrations.CreateModel(
            name='DesafioDetalle',
            fields=[
                ('desafiodetalle_id', models.AutoField(primary_key=True, serialize=False)),
                ('desafiodetalle_desafio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='api_unfrutoparacristo.desafio', verbose_name='Desafío')),
            ],
            options={
                'verbose_name': 'Detalle de Desafío',
                'verbose_name_plural': 'Detalles de Desafíos',
            },
        ),
        migrations.AddField(
            model_name='desafio',
            name='desafio_fruto_asociado',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='desafios_asociados', to='api_unfrutoparacristo.fruto', verbose_name='Fruto Asociado'),
        ),
        migrations.AddField(
            model_name='asistencia',
            name='asistencia_fruto_asociado',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asistencias_con_fruto', to='api_unfrutoparacristo.fruto', verbose_name='Fruto Asociado (Opcional)'),
        ),
        migrations.CreateModel(
            name='FrutoAsignado',
            fields=[
                ('frutoasignado_id', models.AutoField(primary_key=True, serialize=False)),
                ('frutoasignado_fecha', models.DateField(auto_now_add=True, verbose_name='Fecha de Asignación')),
                ('frutoasignado_motivo', models.CharField(max_length=255, verbose_name='Motivo de la Asignación')),
                ('frutoasignado_origen', models.CharField(blank=True, max_length=100, null=True, verbose_name='Origen (ej. Actividad, Desafío, Manual)')),
                ('frutoasignado_fruto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones', to='api_unfrutoparacristo.fruto', verbose_name='Fruto')),
                ('frutoasignado_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frutos_recibidos', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Fruto Asignado',
                'verbose_name_plural': 'Frutos Asignados',
                'ordering': ['-frutoasignado_fecha'],
            },
        ),
        migrations.AddField(
            model_name='desafio',
            name='desafio_idregla',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='desafios_con_regla', to='api_unfrutoparacristo.regla', verbose_name='Regla Asociada'),
        ),
        migrations.CreateModel(
            name='Alumno',
            fields=[
                ('alumno_usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='perfil_alumno', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('alumno_codigo_invitacion', models.CharField(blank=True, max_length=6, null=True, unique=True, verbose_name='Código de Invitación')),
                ('alumno_fecha_cambio_clase', models.DateField(blank=True, null=True, verbose_name='Fecha de Último Cambio de Clase')),
                ('alumno_cambiado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alumnos_cambiados', to=settings.AUTH_USER_MODEL, verbose_name='Cambiado Por')),
                ('alumno_invitado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alumnos_invitados', to=settings.AUTH_USER_MODEL, verbose_name='Invitado Por')),
            ],
            options={
                'verbose_name': 'Alumno',
                'verbose_name_plural': 'Alumnos',
            },
        ),
        migrations.CreateModel(
            name='CestaDetalle',
            fields=[
                ('cestadetalle_id', models.AutoField(primary_key=True, serialize=False)),
                ('cestadetalle_cantidad', models.IntegerField(default=1, verbose_name='Cantidad')),
                ('cestadetalle_cesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='api_unfrutoparacristo.cesta', verbose_name='Cesta')),
                ('cestadetalle_fruto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles_cesta', to='api_unfrutoparacristo.fruto', verbose_name='Fruto')),
            ],
            options={
                'verbose_name': 'Detalle de Cesta',
                'verbose_name_plural': 'Detalles de Cesta',
                'unique_together': {('cestadetalle_cesta', 'cestadetalle_fruto')},
            },
        ),
    ]
